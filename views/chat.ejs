<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatroom</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 h-screen flex items-center justify-center">
    <main class="w-full max-w-4xl p-4 bg-white shadow-lg rounded-lg">
        <section class="flex gap-4">
            <!-- Users List -->
            <div class="USER bg-blue-100 flex flex-col w-1/3 p-4 overflow-y-auto h-[500px] rounded-lg">
                <h2 class="text-lg font-semibold mb-2">Online Users</h2>
                <% onlineUsers.forEach(onlineUser => { %>
                    <div class="chat bg-blue-500 text-white flex items-center gap-4 p-4 mb-2 rounded-lg shadow-md cursor-pointer"
                        onclick="selectChat('<%= onlineUser._id %>', '<%= onlineUser.displayName %>')">
                        <img src="<%= onlineUser.image %>" alt="Avatar" class="w-12 h-12 rounded-full">
                        <h1 class="font-semibold"><%= onlineUser.displayName %></h1>
                    </div>
                <% }) %>
            </div>

            <!-- Chat Room -->
            <div class="CHATROOM bg-gray-50 flex flex-col w-2/3 p-4 h-[500px] rounded-lg">
                <h2 class="text-lg font-semibold mb-2" id="chatHeader">Select a user to start chatting</h2>

                <!-- Chat Messages -->
                <div id="chatMessages" class="flex-1 overflow-y-auto p-2 border border-gray-300 rounded-lg mb-4 h-[350px]">
                    <p class="text-sm text-gray-500">No messages yet...</p>
                </div>

                <!-- Input and Send Button -->
                <div class="flex items-center gap-2">
                    <input id="messageInput" type="text" placeholder="Type your message..."
                        class="flex-1 border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-blue-300">
                    <button id="sendButton" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
                        Send
                    </button>
                </div>
            </div>
        </section>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const user = JSON.parse('<%- JSON.stringify(user) %>');
        socket.emit('join', user._id);

        let receiverId = '';
        let receiverName = '';

        function selectChat(userId, name) {
            receiverId = userId;
            receiverName = name;
            document.getElementById('chatHeader').innerText = `Chat with ${receiverName}`;
            document.getElementById('chatMessages').innerHTML = '<p class="text-sm text-gray-500">Loading messages...</p>';

            // Fetch previous messages
            fetch(`/chat/history/${receiverId}`)
                .then(response => response.json())
                .then(messages => {
                    const chatMessages = document.getElementById('chatMessages');
                    chatMessages.innerHTML = ''; // Clear previous messages

                    messages.forEach(msg => {
                        const messageClass = msg.sender.toString() === user._id.toString() ? "bg-blue-100 text-right" : "bg-gray-100 text-left";
                        chatMessages.innerHTML += `<div class="${messageClass} p-2 rounded-lg mb-2">
                            <p class="text-sm text-gray-700">${msg.message}</p>
                        </div>`;
                    });

                    chatMessages.scrollTop = chatMessages.scrollHeight;
                })
                .catch(error => console.error('Error fetching messages:', error));
        }

        document.getElementById('sendButton').addEventListener('click', () => {
            const message = document.getElementById('messageInput').value;
            if (!receiverId || !message.trim()) {
                console.error('Receiver ID or message is missing');
                return;
            }

            socket.emit('message', { receiverId, message });

            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML += `<div class="bg-blue-100 p-2 rounded-lg mb-2 text-right">
                <p class="text-sm text-gray-700">${message}</p>
            </div>`;
            document.getElementById('messageInput').value = '';
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });

        socket.on('message', (data) => {
            if (data.senderId !== receiverId) return;

            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML += `<div class="bg-gray-100 p-2 rounded-lg mb-2 text-left">
                <p class="text-sm text-gray-700">${data.message}</p>
            </div>`;
        });
    </script>
</body>
</html>
